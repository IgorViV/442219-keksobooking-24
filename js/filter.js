import {resetMarker} from './map.js';

const filterRate = {
  'housting-type': 5,
  'housting-price': 4,
  'housting-rooms': 3,
  'housting-quests': 2,
  'housting-features': 1,
  'nothing': 0,
};

const mapFilters = document.querySelector('.map__filters');

/**
 * Вычисляет рейтинг элемента фильтра
 *
 * @param {Object} filterElement Элемент фильтра
 * @returns {Number} Рейтинг
 */
const getRate = (filterElement) => {
  if (filterElement.value !== 'any') {
    return filterRate['housting-type'];
  }
  return filterRate.nothing;
};

const changeFilter = (cb) => {
  mapFilters.addEventListener('change', (evt) => {
    resetMarker();
    console.log('RATE', getRate(evt.target));

    // определить какой элемент фильтра изменен
    // выбрать рейтинг исходя из выбранного элемента
    // применить измененный фильтр
    cb();
  });
};

const filterAdvertisements = (advertisements) => advertisements
  .slice(0, 10);

export {changeFilter, filterAdvertisements};

// + 1. Вывести на карту не более 10 меток. Ограничение по количеству должно происходить сразу после получения данных с сервера.

// 2. Запрограммировать фильтр «Тип жилья». Помните, независимо от того, сколько объявлений соответствует фильтру, на карте не должно отображаться больше 10 меток.

// + 3. При изменении фильтра скрывать открытый балун с объявлением.

// 4. Убедитесь, что фильтр «Тип жилья» работает корректно. Затем продолжайте.

// 5. Доработайте модуль фильтрации, реализовав все виды фильтров. Все выбранные фильтры применяются вместе: один фильтр не отменяет другие, выбранные до него. Например, после выбора типа жилья можно указать диапазон стоимости и удобства, в таком случае на карте должны показываться только те метки, которые удовлетворяют всем фильтрам сразу. Как в изначальном состоянии, так и при изменении фильтров, на карте должно показываться не более 10 меток.

// 6. Воспользуйтесь приёмом «устранение дребезга», чтобы при переключении фильтра обновление меток, подходящих под фильтры, происходило не чаще, чем один раз в полсекунды.
